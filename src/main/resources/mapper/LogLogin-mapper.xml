<!DOCTYPE mapper SYSTEM "dtd/mybatis-3-mapper.dtd">

<mapper namespace="LogLogin">

    <!-- Result Map 정의 -->
    <resultMap id="logLoginMap" type="logLoginVO">
        <id property="seqId" column="LGN_LOG_SNO"/>
        <result property="empNo" column="ENO"/>
        <result property="loginType" column="CER_KD_NM"/>
        <result property="loginResult" column="LGN_SCS_YN"/>
        <result property="deleteYn" column="DEL_YN"/>
        <result property="guid" column="GUID"/>
        <result property="guidPrgSno" column="GUID_PRG_SNO"/>
        <result property="lstChgUsid" column="LST_CHG_USID"/>
        <result property="updatedTime" column="LST_CHG_DTM"/>
        <result property="createdTime" column="FST_ENR_DTM"/>
        <result property="createUsid" column="FST_ENR_USID"/>
        <result property="failCnt" column="FAIL_CNT"/>
        <result property="releaseDtm" column="RELEASE_DTM"/>

        <result property="realname" column="USR_NM"/>
    </resultMap>

    <!-- 특정 사용자의 로그인 로그 조회 -->
    <select id="findAllByUsername" parameterType="String" resultMap="logLoginMap">
        SELECT 
            LOGIN.ENO,
            LOGIN.CER_KD_NM,
            LOGIN.LGN_SCS_YN,
            LOGIN.FST_ENR_USID,
            LOGIN.FST_ENR_DTM,
            USR.USR_NM
        FROM OEHR.THURXE_CLOGNL LOGIN
        INNER JOIN OEHR.THURXE_CUSRLI USR ON LOGIN.ENO = USR.ENO
        WHERE LOGIN.ENO = #{username}
        ORDER BY LOGIN.FST_ENR_DTM DESC
    </select>

    <!-- 모든 데이터 조회 -->
    <select id="findAll" resultMap="logLoginMap">
        SELECT 
            LOGIN.ENO,
            LOGIN.CER_KD_NM,
            LOGIN.LGN_SCS_YN,
            LOGIN.FST_ENR_USID,
            LOGIN.FST_ENR_DTM,
            USR.USR_NM
        FROM OEHR.THURXE_CLOGNL LOGIN
        INNER JOIN OEHR.THURXE_CUSRLI USR ON LOGIN.ENO = USR.ENO
        ORDER BY LOGIN.FST_ENR_DTM DESC
    </select>

    <!-- 기본키 데이터 중복여부 조회 -->
    <select id="countById" parameterType="Long" resultType="int">
        SELECT COUNT(*)
        FROM OEHR.THURXE_CLOGNL
        WHERE LGN_LOG_SNO = #{seqId}
    </select>


    <!-- 모든 데이터 조회 -->
    <select id="checkFailCnt" parameterType="String" resultMap="logLoginMap">
        WITH recent_failures AS (
            SELECT LGN_SCS_YN,  FST_ENR_DTM, ROWNUM AS rn
            FROM (
                SELECT LGN_SCS_YN, FST_ENR_DTM
                FROM OEHR.THURXE_CLOGNL
                WHERE 
                    ENO = #{username}
                    AND FST_ENR_DTM &gt;= SYSDATE - INTERVAL '5' MINUTE
                ORDER BY FST_ENR_DTM DESC
            )
            WHERE ROWNUM &lt;= 5
        )
        SELECT count(*) FAIL_CNT, MIN(FST_ENR_DTM) + INTERVAL '5' MINUTE RELEASE_DTM
        FROM recent_failures
        WHERE LGN_SCS_YN = 0
        AND (rn &gt; (SELECT NVL(MIN(rn), 5) FROM recent_failures WHERE LGN_SCS_YN = 1) 
            OR NOT EXISTS (SELECT 1 FROM recent_failures WHERE LGN_SCS_YN = 1))
    </select>

    <!-- 신규 데이터 추가 -->
    <insert id="insert" parameterType="logLoginVO">
        <selectKey keyProperty="seqId" resultType="long" order="BEFORE">
            SELECT "OEHR"."SQ_THURXE_CLOGNL_1".nextval FROM dual
        </selectKey>
        INSERT INTO OEHR.THURXE_CLOGNL (
            LGN_LOG_SNO,
            ENO,
            CER_KD_NM,
            LGN_SCS_YN,
            DEL_YN,
            GUID,
            GUID_PRG_SNO,
            LST_CHG_USID,
            LST_CHG_DTM,
            FST_ENR_DTM,
            FST_ENR_USID
        )
        VALUES (
            #{seqId},
            #{empNo},
            #{loginType},
            #{loginResult},
            #{deleteYn},
            #{guid},
            #{guidPrgSno},
            #{lstChgUsid},
            SYSDATE,
            SYSDATE,
            #{createUsid}
        )
    </insert>

</mapper>
