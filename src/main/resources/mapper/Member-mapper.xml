<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "mybatis-3-mapper.dtd">

<mapper namespace="Member">

    <!-- Result Map 정의 --> 
    <resultMap id="memberMap" type="member">
    <id property="SEQ_ID" column="OTP_ISN_SNO"/>
        <result property="EMP_NO" column="ENO"/>
        <result property="OTP" column="OTP_SMS_CER_NO"/>
        <result property="MFA" column="CER_KD_NM"/>
        <result property="CREATED_TIME" column="GNT_TIME"/>
    </resultMap>

    <select id="login" parameterType="member" resultType="member">
        SELECT A.USERNAME AS username, A.PASSWORD AS password from EHR.MEMBER A WHERE A.USERNAME=#{username} AND A.PASSWORD=#{password}
    </select>

    <!-- 모든 데이터 조회 -->
    <select id="findAll" resultType="member">
        SELECT * FROM member
    </select>

    <!-- 모든 데이터 조회 -->
    <select id="findBySearchValue" resultType="member">
        SELECT * FROM member s WHERE s.username LIKE %:searchValue% OR s.responsibility LIKE %:searchValue%
    </select>
    
    <!-- 기본키 데이터 중복여부 조회 -->
    <select id="countById" parameterType="Long" resultType="code">
        SELECT COUNT(*)
        FROM member WHERE username=#{CD}
    </select>
    
    <insert id="save" parameterType="member">
        insert into member(memberEmail, memberPassword, memberName, memberAge, memberMobile)
        values (#{memberEmail}, #{memberPassword}, #{memberName}, #{memberAge}, #{memberMobile})
    </insert>
    
    <insert id="regist" parameterType="member">
        insert into member(userId, memberPassword, memberName)
        values (#{userId}, #{memberPassword}, #{memberName})
    </insert>

    <select id="findById" parameterType="Long" resultType="member">
        select * from member where id=#{id}
    </select>
    <delete id="delete" parameterType="Long">
        delete from member where id=#{id}
    </delete>
    <select id="findByMemberEmail" parameterType="String" resultType="member">
        select * from member where memberEmail=#{loginEmail}
    </select>
    <update id="update" parameterType="member">
        update member set memberAge=#{memberAge}, memberMobile=#{memberMobile}
        where id=#{id}
    </update>
    <select id="findByUserId" parameterType="member" resultType="member">
        select * from member where username=#{username}
    </select>
    <select id="findUuid" parameterType="String" resultType="String">
        select UUID from member where username=#{username}
    </select>
    <select id="pwLogin" parameterType="member" resultType="member">
        select * from member where userId=#{userId} and memberPassword=#{memberPassword}
    </select>
</mapper>